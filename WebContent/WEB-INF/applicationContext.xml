<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"  
		xmlns:tx="http://www.springframework.org/schema/tx"
		 xmlns:aop="http://www.springframework.org/schema/aop" 
		 xmlns:p="http://www.springframework.org/schema/p"  
        xmlns:cache="http://www.springframework.org/schema/cache" 
        xsi:schemaLocation="
       http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context   
      http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/tx   
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/aop   
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/cache   
        http://www.springframework.org/schema/cache/spring-cache.xsd">  

       
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:resources.properties</value>
            </list>
        </property>
    </bean>
    
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"   destroy-method="close">
      <property name="driverClass" value="${jdbc.driverClass}" />
	  <property name="jdbcUrl" value="${jdbc.jdbcUrl}" />
	  <property name="user" value="${jdbc.user}" />
	  <property name="password" value="${jdbc.password}" />
	  <property name="minPoolSize" value="${jdbc.miniPoolSize}" />
	  <property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>  
	  <property name="initialPoolSize" value="${jdbc.initialPoolSize}"/>
	  <property name="maxIdleTime" value="${jdbc.maxIdleTime}"/>
	  <property name="acquireIncrement" value="${jdbc.acquireIncrement}"/>
	  <property name="acquireRetryAttempts" value="${jdbc.acquireRetryAttempts}"/>
	  <property name="acquireRetryDelay" value="${jdbc.acquireRetryDelay}"/>
	  <property name="testConnectionOnCheckin" value="${jdbc.testConnectionOnCheckin}"/>
	  <property name="automaticTestTable" value="${jdbc.automaticTestTable}"/>
	  <property name="idleConnectionTestPeriod" value="${jdbc.idleConnectionTestPeriod}"/>
	  <property name="checkoutTimeout" value="${jdbc.checkoutTimeout}"/>
	<property name="maxStatements" value="${jdbc.maxStatements}"/>
	</bean>
      <!-- 配置mybitasSqlSessionFactoryBean -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />
        <property name="mapperLocations" value="classpath:com/cloudeasy/dao/*Mapper.xml" />
        <property name="configLocation" value="classpath:sqlMapConfig.xml"></property>  
    </bean>  
  
  <!-- 扫描mapper.java  -->
 	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">    
	    <property name="basePackage" value="com.cloudeasy.dao" />
	</bean> 
	
    <!-- 配置SqlSessionTemplate -->  
   <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">  
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />  
   </bean>
    <!-- 事务配置 -->  
   <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean>  
	<bean id="baseDao" class="com.cloudeasy.mybatis.DynamicDBExecuter">   
	       <property name="sqlSessionTemplate" ref="sqlSessionTemplate" />   
	 </bean> 
	
	<tx:annotation-driven transaction-manager="transactionManager"/> 
	<context:annotation-config />  
   	<context:component-scan base-package="com.cloudeasy" annotation-config="true"/> 
</beans>