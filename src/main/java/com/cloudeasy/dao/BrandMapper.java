package com.cloudeasy.dao;

import java.util.List;

import com.cloudeasy.bean.ProductNews;
import com.cloudeasy.dto.BaseDTO;
import com.cloudeasy.dto.user.ListUserReqDTO;
import com.cloudeasy.model.Brand;
import com.cloudeasy.model.BrandNews;

public interface BrandMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table brand_tbl
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table brand_tbl
     *
     * @mbggenerated
     */
    int insert(Brand record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table brand_tbl
     *
     * @mbggenerated
     */
    int insertSelective(Brand record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table brand_tbl
     *
     * @mbggenerated
     */
    Brand selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table brand_tbl
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(Brand record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table brand_tbl
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(Brand record);

	/**
     * 总条数
     * @param model
     * @return int
     */
    public int queryByCount(BaseDTO model);

    /**
     * 名称是否存在
     * @param model
     * @return
     */
    public int isBrandName(BaseDTO model);
    
    
	List<Brand> queryByList(BaseDTO model);

	
	/**
	 * 获取所有品牌
	 * @param model
	 * @return
	 */
	List<Brand> findAllBrand(BaseDTO model);
	
	/**
     * 搜索总条数
     * @param model
     * @return int
     */
    public int querySelectAllCount(BaseDTO model);

    List<ProductNews> querySelectAllByList(BaseDTO model);
}