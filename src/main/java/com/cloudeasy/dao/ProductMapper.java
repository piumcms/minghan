package com.cloudeasy.dao;

import java.util.List;

import com.cloudeasy.common.DataGridModel;
import com.cloudeasy.dto.BaseDTO;
import com.cloudeasy.model.Product;
import com.cloudeasy.mybatis.DynamicDBValues;

public interface ProductMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table product_tbl
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table product_tbl
     *
     * @mbggenerated
     */
    int insert(Product record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table product_tbl
     *
     * @mbggenerated
     */
    int insertSelective(Product record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table product_tbl
     *
     * @mbggenerated
     */
    Product selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table product_tbl
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(Product record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table product_tbl
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(Product record);
    
    /**
     * 总条数
     * @param model
     * @return int
     */
    public int queryByCount(BaseDTO model);

    /**
     * 名称是否存在
     * @param model
     * @return
     */
    public int isBrandName(BaseDTO model);
    
	List<Product> queryByList(BaseDTO model);
	
	public int getTotalRows(DataGridModel model);
	
	public List<Product> queryList(DataGridModel model);
	
	public Product findProductById(Integer id);
	
	public List<Product> findProductByMainProductId(Integer id);
	
	public List<Product> selectProductsByCondition(DynamicDBValues dv);
}